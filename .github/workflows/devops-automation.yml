name: DevOps Profile Enhancement

on:
  schedule:
    # Run at different times to appear more natural
    - cron: '30 9 * * 1,3,5' # Monday, Wednesday, Friday at 9:30 AM
    - cron: '15 14 * * 2,4' # Tuesday, Thursday at 2:15 PM
    - cron: '45 11 * * 6' # Saturday at 11:45 AM
  workflow_dispatch:

jobs:
  simulate-devops-work:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Generate DevOps content
        run: |
          DATE=$(date '+%Y-%m-%d')
          
          # Select a random DevOps activity
          ACTIVITIES=("infrastructure-as-code" "monitoring" "ci-cd" "kubernetes" "cloud-config" "security-scan")
          RANDOM_ACTIVITY=${ACTIVITIES[$RANDOM % ${#ACTIVITIES[@]}]}
          
          # Create appropriate files based on activity
          case $RANDOM_ACTIVITY in
            "infrastructure-as-code")
              mkdir -p terraform
              echo "# Terraform Configuration Update - $DATE" > terraform/main-$DATE.tf
              echo "provider \"aws\" {" >> terraform/main-$DATE.tf
              echo "  region = \"us-west-2\"" >> terraform/main-$DATE.tf
              echo "}" >> terraform/main-$DATE.tf
              echo "resource \"aws_instance\" \"example\" {" >> terraform/main-$DATE.tf
              echo "  ami           = \"ami-0c55b159cbfafe1f0\"" >> terraform/main-$DATE.tf
              echo "  instance_type = \"t2.micro\"" >> terraform/main-$DATE.tf
              echo "}" >> terraform/main-$DATE.tf
              ;;
            "monitoring")
              mkdir -p monitoring
              echo "# Prometheus Configuration - $DATE" > monitoring/prometheus-$DATE.yml
              echo "global:" >> monitoring/prometheus-$DATE.yml
              echo "  scrape_interval: 15s" >> monitoring/prometheus-$DATE.yml
              echo "scrape_configs:" >> monitoring/prometheus-$DATE.yml
              echo "  - job_name: 'prometheus'" >> monitoring/prometheus-$DATE.yml
              echo "    static_configs:" >> monitoring/prometheus-$DATE.yml
              echo "      - targets: ['localhost:9090']" >> monitoring/prometheus-$DATE.yml
              ;;
            "ci-cd")
              mkdir -p .github/workflows
              echo "name: CI Pipeline - $DATE" > .github/workflows/ci-pipeline-$DATE.yml
              echo "on:" >> .github/workflows/ci-pipeline-$DATE.yml
              echo "  push:" >> .github/workflows/ci-pipeline-$DATE.yml
              echo "    branches: [ main ]" >> .github/workflows/ci-pipeline-$DATE.yml
              echo "jobs:" >> .github/workflows/ci-pipeline-$DATE.yml
              echo "  build:" >> .github/workflows/ci-pipeline-$DATE.yml
              echo "    runs-on: ubuntu-latest" >> .github/workflows/ci-pipeline-$DATE.yml
              echo "    steps:" >> .github/workflows/ci-pipeline-$DATE.yml
              echo "      - uses: actions/checkout@v3" >> .github/workflows/ci-pipeline-$DATE.yml
              echo "      - name: Run tests" >> .github/workflows/ci-pipeline-$DATE.yml
              echo "        run: echo \"Running tests...\"" >> .github/workflows/ci-pipeline-$DATE.yml
              ;;
            "kubernetes")
              mkdir -p kubernetes
              echo "apiVersion: apps/v1" > kubernetes/deployment-$DATE.yaml
              echo "kind: Deployment" >> kubernetes/deployment-$DATE.yaml
              echo "metadata:" >> kubernetes/deployment-$DATE.yaml
              echo "  name: nginx-deployment" >> kubernetes/deployment-$DATE.yaml
              echo "spec:" >> kubernetes/deployment-$DATE.yaml
              echo "  replicas: 3" >> kubernetes/deployment-$DATE.yaml
              echo "  selector:" >> kubernetes/deployment-$DATE.yaml
              echo "    matchLabels:" >> kubernetes/deployment-$DATE.yaml
              echo "      app: nginx" >> kubernetes/deployment-$DATE.yaml
              echo "  template:" >> kubernetes/deployment-$DATE.yaml
              echo "    metadata:" >> kubernetes/deployment-$DATE.yaml
              echo "      labels:" >> kubernetes/deployment-$DATE.yaml
              echo "        app: nginx" >> kubernetes/deployment-$DATE.yaml
              echo "    spec:" >> kubernetes/deployment-$DATE.yaml
              echo "      containers:" >> kubernetes/deployment-$DATE.yaml
              echo "      - name: nginx" >> kubernetes/deployment-$DATE.yaml
              echo "        image: nginx:1.14.2" >> kubernetes/deployment-$DATE.yaml
              echo "        ports:" >> kubernetes/deployment-$DATE.yaml
              echo "        - containerPort: 80" >> kubernetes/deployment-$DATE.yaml
              ;;
            "cloud-config")
              mkdir -p cloud-config
              echo "# AWS CloudFormation Template - $DATE" > cloud-config/template-$DATE.json
              echo "{" >> cloud-config/template-$DATE.json
              echo "  \"AWSTemplateFormatVersion\": \"2010-09-09\"," >> cloud-config/template-$DATE.json
              echo "  \"Resources\": {" >> cloud-config/template-$DATE.json
              echo "    \"MyEC2Instance\": {" >> cloud-config/template-$DATE.json
              echo "      \"Type\": \"AWS::EC2::Instance\"," >> cloud-config/template-$DATE.json
              echo "      \"Properties\": {" >> cloud-config/template-$DATE.json
              echo "        \"InstanceType\": \"t2.micro\"," >> cloud-config/template-$DATE.json
              echo "        \"ImageId\": \"ami-0c55b159cbfafe1f0\"" >> cloud-config/template-$DATE.json
              echo "      }" >> cloud-config/template-$DATE.json
              echo "    }" >> cloud-config/template-$DATE.json
              echo "  }" >> cloud-config/template-$DATE.json
              echo "}" >> cloud-config/template-$DATE.json
              ;;
            "security-scan")
              mkdir -p security
              echo "# Security Scan Results - $DATE" > security/scan-$DATE.md
              echo "## Vulnerability Scan Summary" >> security/scan-$DATE.md
              echo "- Critical: 0" >> security/scan-$DATE.md
              echo "- High: 0" >> security/scan-$DATE.md
              echo "- Medium: 2" >> security/scan-$DATE.md
              echo "- Low: 5" >> security/scan-$DATE.md
              echo "## Remediation" >> security/scan-$DATE.md
              echo "- Updated dependencies" >> security/scan-$DATE.md
              echo "- Applied security patches" >> security/scan-$DATE.md
              ;;
          esac
          
          # Update activity log
          mkdir -p logs
          echo "- $(date '+%Y-%m-%d %H:%M:%S'): Updated $RANDOM_ACTIVITY configuration" >> logs/activity-log.md

      - name: Commit and push changes
        run: |
          git add .
          git commit -m "DevOps update: $(date '+%Y-%m-%d')"
          git push
